/*
 * Copyright (c) 2025 See AUTHORS file.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
		gradlePluginPortal()
	}
	dependencies {
		classpath 'com.vanniktech:gradle-maven-publish-plugin:0.34.0'
	}
}

apply plugin: 'java-library'
apply plugin: 'com.vanniktech.maven.publish'

def projectName = 'jdkgdxds'
version "$VERSION_NAME"
group 'com.github.tommyettinger'

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// Disable JDK 8's doclint
// http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
if (JavaVersion.current().isJava8Compatible()) {
	allprojects {
		tasks.withType(Javadoc).tap {
			configureEach {
				// The -quiet is because of some sort of weird JDK JavaCompiler bug:
				// https://discuss.gradle.org/t/passing-arguments-to-compiler-and-javadoc/1661
				options.addStringOption('Xdoclint:none,-missing', '-quiet')
				options.tags('apiNote:a:"API Note"', 'implSpec:a:"Implementation Requirements"', 'implNote:a:"Implementation Note"')
			}
		}
	}
}

import com.vanniktech.maven.publish.JavaLibrary
import com.vanniktech.maven.publish.JavadocJar

mavenPublishing {
	configure(new JavaLibrary(new JavadocJar.Javadoc(), true))
}
plainJavadocJar.archiveBaseName.set("$projectName")

java.sourceCompatibility = 1.8
java.targetCompatibility = 1.8

if (JavaVersion.current().isJava9Compatible()) {
	compileJava.targetCompatibility = 8
	allprojects {
		tasks.withType(JavaCompile).tap {
			configureEach {
				options.release.set(8)
			}
		}
	}
}

compileTestJava {
	sourceCompatibility = 24
	targetCompatibility = 24
	if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_24) ) {
		options.setRelease(24)
	}
}

apply plugin: 'idea'
idea.module.excludeDirs += [file("docs/")]

javadoc.options.source("17")
javadoc.destinationDir = file("docs/apidocs")

sourceSets.test.resources.srcDirs = [file('src/test/resources').path]

jar {
	archiveBaseName.set(projectName)
	manifest {
		attributes 'Implementation-Title': projectName, 'Implementation-Version': archiveVersion
	}
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
	maven { url 'https://jitpack.io' }
}

dependencies {
	api "com.github.tommyettinger:funderby:$funderbyVersion"
	api "com.github.tommyettinger:digital:$digitalVersion"
	api "org.checkerframework:checker-qual:$checkerVersion" // provides nullity annotations
//    api 'com.google.code.findbugs:jsr305:3.0.2' // may cause issues if JDK9+ modules are used
	testImplementation "com.github.tommyettinger:juniper:$juniperVersion"
	testImplementation "junit:junit:4.13.2"
}
